#cloud-config
hostname: futuregateway
manage_etc_hosts: true
package_update: true
package_upgrade: true
users:
    - name: futuregateway
      groups: sudo
      shell: /bin/bash
      sudo: ['ALL=(ALL) NOPASSWD:ALL']
      lock-passwd: true
      ssh-import-id: futuregateway
      ssh-authorized-keys:
        - <place here your ssh public key(s)> 
write_files:
  - path: /root/installFG.sh
    permissions: "0755"
    owner: "root"
    content: |
      #!/bin/bash
      #      
      # installFG.sh - Download, configure and execute the fgSetup.sh script
      #
      # Enable the installation flag, FutureGateway is installing
      #
      # Configure the appliance options below:
      FGLIFERAY=1                                              # Use 0 to skip liferay installation
      FGREBOOT=0                                               # Use 1 to reboot after installation, thus FG service will start
      FGSSH_PORT="<place here your ssh port>"                  # User can specify any ssh port (use 22 for default)
      FGTOMCAT_USR="<place here your tomcat admin user name>"  # Tomcat administration user name
      FGTOMCAT_PAS="<place here yout tomcat admin password>"   # Tomcat administration password
      # Update nameservers
      echo "nameserver 8.8.8.8" >> /etc/resolv.conf
      echo "nameserver 8.8.4.4" >> /etc/resolv.conf
      # Reconfigure SSH port as requested
      sed -i -e "/^Port/s/^.*$/Port ${FGSSH_PORT}/" /etc/ssh/sshd_config
      sed -i -e "/^PermitRootLogin/s/^.*$/PermitRootLogin no/" /etc/ssh/sshd_config
      restart ssh
      # Configure ufw
      sed -i -e '/^IPV6/s/^.*$/IPV6=no/' /etc/default/ufw
      ufw enable
      ufw default deny incoming
      ufw default allow outgoing
      ufw allow $FGSSH_PORT/tcp
      ufw allow 80/tcp
      ufw allow 8080/tcp
      # Start installation process
      touch /home/futuregateway/.installingFG
      # Move to /root directory and download from Git the current fgSetup.sh script
      cd /root
      wget https://github.com/FutureGateway/PortalSetup/raw/master/Ubuntu_14.04/fgSetup.sh
      # Configure the fgSetup.sh script
      #  
      # Following lines configure the setup_config.sh file contained inside the fgSetup script
      # You can configure any option just introducing the following commands:
      # mv fgSetup.sh fgSetup.sh_orig # Make a safe copy of existing fgSetup.sh script
      # cat fgSetup.sh_orig | sed s/<value to change>/<changed value> > fgSetup.sh # Place the new value
      # Configure Tomcat admin username and password
      mv fgSetup.sh fgSetup.sh_orig
      cat fgSetup.sh_orig | sed s/TOMCATUSR=\"tomcat\"/TOMCATUSR=\"${FGTOMCAT_USR}\"/ > fgSetup.sh
      mv fgSetup.sh fgSetup.sh_orig
      cat fgSetup.sh_orig | sed s/'TOMCATPAS=$(openssl rand -hex 4)'/TOMCATPAS=\"${FGTOMCAT_PAS}\"/ > fgSetup.sh
      # FutureGateway could not require LIFERAY Portal installation
      if [ $FGLIFERAY -eq 0 ]; then
        mv fgSetup.sh fgSetup.sh_orig
        cat fgSetup.sh_orig | sed s/SKIP_LIFERAY=0/SKIP_LIFERAY=1/ > fgSetup.sh
      fi
      # Enable the execution flag to fgSetup.sh file and remove the _orig
      chmod +x fgSetup.sh
      rm -f fgSetup.sh_orig
      # fgSetup installation connects via ssh to futuregateway user during intallation
      # a root public key is generated and placed into futuregateway authorized_keys file 
      cat /dev/zero | ssh-keygen -q -N ""
      cat /root/.ssh/id_rsa.pub >> /home/futuregateway/.ssh/authorized_keys
      # Executing fgSetup.sh script 
      ./fgSetup.sh futuregateway futuregateway $FGSSH_PORT $(cat /root/.ssh/id_rsa.pub)
      # Setup finished, modify the futuregateway installation flag accordingly
      rm -f /home/futuregateway/.installingFG
      # More safe removing ubuntu user
      sudo userdel ubuntu && sudo rm -rf /home/ubuntu/
      # After the installation the futuregateway service will not start automatically since 
      # several manual configurations could be still necessary before. However enablling the 
      # following flag the futuregateway  service will start automatically after reboot
      if [ $FGREBOOT -ne 0 ]; then
        echo "Rebooting in 15 secs"
        shutdown -r -t 15
      else
        echo "Installation completed"
      fi 
runcmd:
  - /bin/bash /root/installFG.sh 2>/root/install.err > /root/install.out

